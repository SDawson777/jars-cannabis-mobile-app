name: E2E Smoke Tests (Detox)

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  e2e-smoke:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    env:
      NODE_OPTIONS: "--max-old-space-size=4096"

    steps:
      - name: üèó Checkout repository
        uses: actions/checkout@v4

      - name: üèó Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: npm

      - name: üèó Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: üèó Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: üóÇÔ∏è Cache Android SDK
        uses: actions/cache@v4
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
            ${{ env.ANDROID_HOME }}/system-images/*
            ${{ env.ANDROID_HOME }}/platforms/*
            ${{ env.ANDROID_HOME }}/platform-tools/*
            ${{ env.ANDROID_HOME }}/build-tools/*
          key: android-sdk-${{ runner.os }}-api-34
          restore-keys: |
            android-sdk-${{ runner.os }}-

      - name: üì¶ Install dependencies
        run: npm ci --legacy-peer-deps

      - name: üèó Setup Expo
        uses: expo/expo-github-action@v8
        with:
          expo-version: latest
          token: ${{ secrets.EXPO_TOKEN || '' }}
        continue-on-error: true

      - name: ü§ñ Create Android emulator
        env:
          AVD_NAME: Pixel_XL_API_34
        run: |
          # Verify Android SDK is properly installed
          if [ ! -f "$ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager" ]; then
            echo "Android SDK tools not found. Ensure android-actions/setup-android@v3 succeeded."
            exit 1
          fi
          echo "y" | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --install "system-images;android-34;google_apis;x86_64"
          echo "y" | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --install "platforms;android-34"
          echo "y" | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --install "build-tools;34.0.0"

          # Remove and recreate AVD if config is missing or corrupt
          if [ ! -f "$HOME/.android/avd/$AVD_NAME.ini" ]; then
            echo "AVD config missing, recreating $AVD_NAME"
            $ANDROID_HOME/cmdline-tools/latest/bin/avdmanager delete avd --name "$AVD_NAME" || true
            echo "no" | $ANDROID_HOME/cmdline-tools/latest/bin/avdmanager create avd \
              --force \
              --name "$AVD_NAME" \
              --package "system-images;android-34;google_apis;x86_64" \
              --tag "google_apis" \
              --abi "x86_64" \
              --device "pixel_xl"
          fi

          # Verify AVD was created
          $ANDROID_HOME/emulator/emulator -list-avds

      - name: ü§ñ Start Android emulator
        env:
          AVD_NAME: Pixel_XL_API_34
        run: |
          # Verify emulator binary exists
          if [ ! -f "$ANDROID_HOME/emulator/emulator" ]; then
            echo "Android emulator binary not found at $ANDROID_HOME/emulator/emulator"
            exit 1
          fi
          if [ ! -f "$HOME/.android/avd/$AVD_NAME.ini" ]; then
            echo "AVD config missing, recreating $AVD_NAME before launch"
            $ANDROID_HOME/cmdline-tools/latest/bin/avdmanager delete avd --name "$AVD_NAME" || true
            echo "no" | $ANDROID_HOME/cmdline-tools/latest/bin/avdmanager create avd \
              --force \
              --name "$AVD_NAME" \
              --package "system-images;android-34;google_apis;x86_64" \
              --tag "google_apis" \
              --abi "x86_64" \
              --device "pixel_xl"
          fi
          $ANDROID_HOME/emulator/emulator -avd "$AVD_NAME" -no-snapshot -no-window -camera-back none -camera-front none -selinux permissive -qemu -m 2048 &
          $ANDROID_HOME/platform-tools/adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed | tr -d '\''\r'\'') ]]; do sleep 1; done; input keyevent 82'

      - name: üèó Build app for E2E
        run: |
          npm run build:e2e:android
        env:
          EXPO_PUBLIC_API_BASE_URL: http://10.0.2.2:3000/api/v1
          CI: true

      - name: üöÄ Start backend server
        run: |
          cd backend
          npm ci --legacy-peer-deps
          npm start &
          # Wait for server to be ready
          timeout 30 bash -c 'until curl -f http://localhost:3000/api/v1/health; do sleep 1; done'
        env:
          NODE_ENV: test
          DATABASE_URL: file:./test.db
          JWT_SECRET: test-secret-key
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY || 'test-key' }}

      - name: üß™ Run Detox E2E tests
        run: npm run test:e2e:android
        env:
          DETOX_CONFIGURATION: android.emu.debug
          EXPO_PUBLIC_API_BASE_URL: http://10.0.2.2:3000/api/v1

      - name: üì± Upload test artifacts
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: detox-artifacts
          path: |
            artifacts/
            e2e/screenshots/
            e2e/videos/

      - name: üìä Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: e2e-test-results
          path: |
            e2e/test-results/
            coverage/
