name: Vendor Stripe Pods

on:
  workflow_dispatch:
    inputs:
      target_branch:
        description: 'Branch to vendor Stripe into (will push commits to this branch)'
        required: true
        default: 'chore/ios-lockdown'

jobs:
  vendor-stripe:
    runs-on: macos-latest
    steps:
      - name: Checkout target branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.target_branch }}
          fetch-depth: 0

      - name: Set up Ruby / CocoaPods
        run: |
          sudo gem install cocoapods --no-document
          pod --version

      - name: Enable Corepack / Yarn 3 / install JS deps
        run: |
          corepack enable || true
          corepack prepare yarn@3.6.1 --activate || true
          node --version || true
          yarn --version || true
          yarn install --immutable

      - name: First pod install (online) to fetch Stripe from remote
        run: |
          set -euo pipefail
          cd ios
          pod install --repo-update

      - name: Vendor Stripe pods (copy source + podspecs into ios/Vendor/Stripe)
        run: |
          set -euo pipefail
          cd ios

          mkdir -p Vendor/Stripe

          # Loop over every Stripe* pod folder that CocoaPods just created
          for PODDIR in Pods/Stripe*; do
            [ -d "$PODDIR" ] || continue
            PODNAME=$(basename "$PODDIR")

            echo "Vendoring $PODNAME ..."

            # Create Vendor/Stripe/<PodName>/
            mkdir -p "Vendor/Stripe/$PODNAME"

            # Copy EVERYTHING from the CocoaPods-installed dir
            cp -R "$PODDIR/"* "Vendor/Stripe/$PODNAME"/ || true

            # Also explicitly copy the podspec (CocoaPods needs this to treat :path as a pod)
            if [ -f "$PODDIR/$PODNAME.podspec" ]; then
              cp "$PODDIR/$PODNAME.podspec" "Vendor/Stripe/$PODNAME/$PODNAME.podspec"
            fi
            if [ -f "$PODDIR/$PODNAME.podspec.json" ]; then
              cp "$PODDIR/$PODNAME.podspec.json" "Vendor/Stripe/$PODNAME/$PODNAME.podspec.json"
            fi
          done

          echo "Vendored Stripe pods:"
          ls Vendor/Stripe

      - name: Patch Podfile to point Stripe pods at vendored source
        run: |
          set -euo pipefail
          cd ios
          PODFILE="Podfile"

          # 1. Comment out any existing Stripe pod lines that DON'T already point to Vendor/Stripe
          # We match pod 'Stripe' or pod "StripeSomething"
          sed -i.bak -E 's/^([[:space:]]*pod[[:space:]]+["'\'']Stripe[A-Za-z0-9]*["'\''].*)$/# \1/g' "$PODFILE"

          # 2. If our vendored block isn't present yet, inject it before post_install
          if ! grep -q 'Vendor/Stripe/StripeFinancialConnections' "$PODFILE"; then
            awk '
              /post_install do/ && !done {
                print "  # BEGIN vendored Stripe pods (offline, committed)"
                print "  pod \"Stripe\",                    :path => \"Vendor/Stripe/Stripe\""
                print "  pod \"StripeCore\",                :path => \"Vendor/Stripe/StripeCore\""
                print "  pod \"StripeUICore\",              :path => \"Vendor/Stripe/StripeUICore\""
                print "  pod \"StripeApplePay\",            :path => \"Vendor/Stripe/StripeApplePay\""
                print "  pod \"StripePayments\",            :path => \"Vendor/Stripe/StripePayments\""
                print "  pod \"StripePaymentsUI\",          :path => \"Vendor/Stripe/StripePaymentsUI\""
                print "  pod \"StripePaymentSheet\",        :path => \"Vendor/Stripe/StripePaymentSheet\""
                print "  pod \"StripeFinancialConnections\",:path => \"Vendor/Stripe/StripeFinancialConnections\""
                print "  # END vendored Stripe pods"
                done=1
              }
              { print }
            ' "$PODFILE" > "$PODFILE.tmp" && mv "$PODFILE.tmp" "$PODFILE"
          fi

          echo "Final Podfile after vendoring:"
          cat Podfile

      - name: Reinstall pods using vendored Stripe (offline-style)
        run: |
          set -euo pipefail
          cd ios
          pod deintegrate
          pod install

      - name: Commit vendored Stripe + Podfile + Podfile.lock back to branch
        env:
          GIT_AUTHOR_NAME: github-actions[bot]
          GIT_AUTHOR_EMAIL: 41898282+github-actions[bot]@users.noreply.github.com
          GIT_COMMITTER_NAME: github-actions[bot]
          GIT_COMMITTER_EMAIL: 41898282+github-actions[bot]@users.noreply.github.com
        run: |
          set -euo pipefail
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          git add ios/Vendor/Stripe ios/Podfile ios/Podfile.lock
          git status

          if ! git diff --cached --quiet; then
            git commit -m "chore(ios): vendor Stripe pods (source + podspecs) for offline CI stability"
            git push origin ${{ github.event.inputs.target_branch }}
          else
            echo "No vendoring changes to commit."
          fi
