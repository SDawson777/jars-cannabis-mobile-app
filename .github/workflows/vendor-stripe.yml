name: Vendor Stripe Pods

on:
  workflow_dispatch:
    inputs:
      target_branch:
        description: 'Branch to vendor Stripe into (will push commits to this branch)'
        required: true
        default: 'chore/ios-lockdown'

jobs:
  vendor-stripe:
    runs-on: macos-latest

    steps:
      - name: Checkout target branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.target_branch }}
          fetch-depth: 0

      - name: Set up Ruby / CocoaPods
        run: |
          set -euo pipefail
          sudo gem install cocoapods --no-document
          pod --version

      - name: Enable Corepack / Yarn 3 / install JS deps
        run: |
          set -euo pipefail
          corepack enable || true
          corepack prepare yarn@3.6.1 --activate || true
          node --version || true
          yarn --version || true
          yarn install --immutable

      # 1. Online pod install: this pulls Stripe from GitHub into ios/Pods/*
      - name: Online pod install to fetch Stripe
        run: |
          set -euo pipefail
          cd ios
          pod install --repo-update

      # 2. Vendor Stripe pods locally, INCLUDING podspec(.json)
      - name: Copy Stripe pods + podspecs into ios/Vendor/Stripe
        run: |
          set -euo pipefail
          cd ios

          mkdir -p Vendor/Stripe

          # For every Pods/Stripe* directory CocoaPods just created:
          for PODDIR in Pods/Stripe*; do
            [ -d "$PODDIR" ] || continue
            PODNAME=$(basename "$PODDIR")
            echo "Vendoring $PODNAME ..."

            mkdir -p "Vendor/Stripe/$PODNAME"
            # Copy the entire pod source
            cp -R "$PODDIR/"* "Vendor/Stripe/$PODNAME"/ || true

            # Copy any podspec file into the vendored dir
            if [ -f "$PODDIR/$PODNAME.podspec" ]; then
              cp "$PODDIR/$PODNAME.podspec" "Vendor/Stripe/$PODNAME/$PODNAME.podspec"
            fi
            if [ -f "$PODDIR/$PODNAME.podspec.json" ]; then
              cp "$PODDIR/$PODNAME.podspec.json" "Vendor/Stripe/$PODNAME/$PODNAME.podspec.json"
            fi
          done

          echo "Vendored Stripe pods:"
          ls Vendor/Stripe
          echo "Contents of one vendored pod (StripeFinancialConnections, if present):"
          ls Vendor/Stripe/StripeFinancialConnections || true

      # 3. Patch Podfile so Stripe pods now point to Vendor/Stripe/*
      - name: Patch Podfile to use vendored Stripe pods
        run: |
          set -euo pipefail
          cd ios
          PODFILE="Podfile"

          # Comment out ANY existing Stripe pod declarations so we don't conflict.
          # We only comment lines that start with pod "Stripe"
          sed -i.bak -E 's/^([[:space:]]*pod[[:space:]]+"Stripe[A-Za-z0-9]*".*)$/# \1/g' "$PODFILE"

          # Inject vendored block (only if not already present)
          if ! grep -q 'Vendor/Stripe/StripeFinancialConnections' "$PODFILE"; then
            awk '
              /post_install do/ && !done {
                print "  # BEGIN vendored Stripe pods (offline, committed)"
                print "  pod \"Stripe\",                    :path => \"Vendor/Stripe/Stripe\""
                print "  pod \"StripeCore\",                :path => \"Vendor/Stripe/StripeCore\""
                print "  pod \"StripeUICore\",              :path => \"Vendor/Stripe/StripeUICore\""
                print "  pod \"StripeApplePay\",            :path => \"Vendor/Stripe/StripeApplePay\""
                print "  pod \"StripePayments\",            :path => \"Vendor/Stripe/StripePayments\""
                print "  pod \"StripePaymentsUI\",          :path => \"Vendor/Stripe/StripePaymentsUI\""
                print "  pod \"StripePaymentSheet\",        :path => \"Vendor/Stripe/StripePaymentSheet\""
                print "  pod \"StripeFinancialConnections\",:path => \"Vendor/Stripe/StripeFinancialConnections\""
                print "  # END vendored Stripe pods"
                done=1
              }
              { print }
            ' "$PODFILE" > "$PODFILE.tmp" && mv "$PODFILE.tmp" "$PODFILE"
          fi

          echo "=== BEGIN Podfile ==="
          cat Podfile
          echo "=== END Podfile ==="

      # 4. NOW that Vendor/Stripe is populated AND Podfile points to it,
      #    do the offline-style reinstall.
      - name: Offline-style reinstall using vendored Stripe
        run: |
          set -euo pipefail
          cd ios

          # Start fresh so the lockfile re-records Stripe as :path deps
          pod deintegrate
          pod install

      # 5. Commit the vendored Stripe code + Podfile + Podfile.lock back to the branch
      - name: Commit vendored Stripe changes
        env:
          GIT_AUTHOR_NAME: github-actions[bot]
          GIT_AUTHOR_EMAIL: 41898282+github-actions[bot]@users.noreply.github.com
          GIT_COMMITTER_NAME: github-actions[bot]
          GIT_COMMITTER_EMAIL: 41898282+github-actions[bot]@users.noreply.github.com
        run: |
          set -euo pipefail
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          git add ios/Vendor/Stripe ios/Podfile ios/Podfile.lock
          git status

          if ! git diff --cached --quiet; then
            git commit -m "chore(ios): vendor Stripe pods (source + podspecs) and lock Podfile for offline CI"
            git push origin ${{ github.event.inputs.target_branch }}
          else
            echo "No vendoring changes to commit."
          fi
          
