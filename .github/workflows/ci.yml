name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-test:
    runs-on: ubuntu-latest
    env:
      NODE_OPTIONS: '--max-old-space-size=4096'
    steps:
      - uses: actions/checkout@v4

      - name: üîç Preflight - Verify lockfiles exist
        run: |
          test -f npm-shrinkwrap.json || (echo "‚ùå Missing root npm-shrinkwrap.json"; exit 1)
          test -f backend/package-lock.json || (echo "‚ùå Missing backend/package-lock.json"; exit 1)
          echo "‚úÖ All required lockfiles present"

      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'
          cache-dependency-path: |
            npm-shrinkwrap.json
            backend/package-lock.json

      - name: üì¶ Cache npm (root)
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: npm-cache-root-${{ hashFiles('npm-shrinkwrap.json') }}
          restore-keys: |
            npm-cache-root-

      - name: üì¶ Cache npm (backend)
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: npm-cache-backend-${{ hashFiles('backend/package-lock.json') }}
          restore-keys: |
            npm-cache-backend-

      - name: üîß Install deps (root)
        run: npm ci
      - name: Lint
        run: npm run lint
      - name: Format Check
        run: npm run format:ci
      - name: Typecheck
        run: npm run typecheck
      - name: Unit & Integration Tests (frontend)
        run: npm run test:ci

      - name: üîß Install deps (backend)
        run: npm ci
        working-directory: backend

      - name: Backend Lint
        run: npm run lint
        working-directory: backend

      - name: Backend Typecheck
        run: npm run typecheck
        working-directory: backend

      - name: Backend Tests
        run: npm run test:ci
        working-directory: backend
        env:
          NODE_ENV: test
          DATABASE_URL: file:./test.db
          # For tests we prefer long-enough JWT secret (some validators require >=32 chars)
          JWT_SECRET: test-jwt-secret-at-least-32-characters-long
          FIREBASE_SERVICE_ACCOUNT_BASE64: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_BASE64 || 'dGVzdC1zZXJ2aWNlLWFjY291bnQ=' }}
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID || 'test-project' }}
          # Add test defaults for external API keys used by the backend env schema
          STRIPE_SECRET_KEY: sk_test_test
          OPENAI_API_KEY: test-openai-key
          OPENWEATHER_API_KEY: test-weather-key

      - name: üåê Expo Web Export Test (non-blocking)
        run: CI=1 npx expo export --platform web || echo "‚ö†Ô∏è  Web export not available in this Expo configuration"

      - name: Audit (no fail on warn)
        run: npm audit --production --audit-level=high || true
